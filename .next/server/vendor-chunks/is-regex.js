"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/is-regex";
exports.ids = ["vendor-chunks/is-regex"];
exports.modules = {

/***/ "(rsc)/./node_modules/is-regex/index.js":
/*!****************************************!*\
  !*** ./node_modules/is-regex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar callBound = __webpack_require__(/*! call-bound */ \"(rsc)/./node_modules/call-bound/index.js\");\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"(rsc)/./node_modules/has-tostringtag/shams.js\")();\nvar hasOwn = __webpack_require__(/*! hasown */ \"(rsc)/./node_modules/hasown/index.js\");\nvar gOPD = __webpack_require__(/*! gopd */ \"(rsc)/./node_modules/gopd/index.js\");\n/** @type {import('.')} */ var fn;\nif (hasToStringTag) {\n    /** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */ var $exec = callBound(\"RegExp.prototype.exec\");\n    /** @type {object} */ var isRegexMarker = {};\n    var throwRegexMarker = function() {\n        throw isRegexMarker;\n    };\n    /** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */ var badStringifier = {\n        toString: throwRegexMarker,\n        valueOf: throwRegexMarker\n    };\n    if (typeof Symbol.toPrimitive === \"symbol\") {\n        badStringifier[Symbol.toPrimitive] = throwRegexMarker;\n    }\n    /** @type {import('.')} */ // @ts-expect-error TS can't figure out that the $exec call always throws\n    // eslint-disable-next-line consistent-return\n    fn = function isRegex(value) {\n        if (!value || typeof value !== \"object\") {\n            return false;\n        }\n        // eslint-disable-next-line no-extra-parens\n        var descriptor = /** @type {NonNullable<typeof gOPD>} */ gOPD(/** @type {{ lastIndex?: unknown }} */ value, \"lastIndex\");\n        var hasLastIndexDataProperty = descriptor && hasOwn(descriptor, \"value\");\n        if (!hasLastIndexDataProperty) {\n            return false;\n        }\n        try {\n            // eslint-disable-next-line no-extra-parens\n            $exec(value, /** @type {string} */ /** @type {unknown} */ badStringifier);\n        } catch (e) {\n            return e === isRegexMarker;\n        }\n    };\n} else {\n    /** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */ var $toString = callBound(\"Object.prototype.toString\");\n    /** @const @type {'[object RegExp]'} */ var regexClass = \"[object RegExp]\";\n    /** @type {import('.')} */ fn = function isRegex(value) {\n        // In older browsers, typeof regex incorrectly returns 'function'\n        if (!value || typeof value !== \"object\" && typeof value !== \"function\") {\n            return false;\n        }\n        return $toString(value) === regexClass;\n    };\n}\nmodule.exports = fn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXMtcmVnZXgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUN4QixJQUFJQyxpQkFBaUJELG1CQUFPQSxDQUFDO0FBQzdCLElBQUlFLFNBQVNGLG1CQUFPQSxDQUFDO0FBQ3JCLElBQUlHLE9BQU9ILG1CQUFPQSxDQUFDO0FBRW5CLHdCQUF3QixHQUN4QixJQUFJSTtBQUVKLElBQUlILGdCQUFnQjtJQUNuQix1S0FBdUssR0FDdkssSUFBSUksUUFBUU4sVUFBVTtJQUN0QixtQkFBbUIsR0FDbkIsSUFBSU8sZ0JBQWdCLENBQUM7SUFFckIsSUFBSUMsbUJBQW1CO1FBQ3RCLE1BQU1EO0lBQ1A7SUFDQSxvRkFBb0YsR0FDcEYsSUFBSUUsaUJBQWlCO1FBQ3BCQyxVQUFVRjtRQUNWRyxTQUFTSDtJQUNWO0lBRUEsSUFBSSxPQUFPSSxPQUFPQyxXQUFXLEtBQUssVUFBVTtRQUMzQ0osY0FBYyxDQUFDRyxPQUFPQyxXQUFXLENBQUMsR0FBR0w7SUFDdEM7SUFFQSx3QkFBd0IsR0FDeEIseUVBQXlFO0lBQ3pFLDZDQUE2QztJQUM3Q0gsS0FBSyxTQUFTUyxRQUFRQyxLQUFLO1FBQzFCLElBQUksQ0FBQ0EsU0FBUyxPQUFPQSxVQUFVLFVBQVU7WUFDeEMsT0FBTztRQUNSO1FBRUEsMkNBQTJDO1FBQzNDLElBQUlDLGFBQXFELHFDQUFILEdBQUlaLEtBQU0sb0NBQW9DLEdBQUlXLE9BQVE7UUFDaEgsSUFBSUUsMkJBQTJCRCxjQUFjYixPQUFPYSxZQUFZO1FBQ2hFLElBQUksQ0FBQ0MsMEJBQTBCO1lBQzlCLE9BQU87UUFDUjtRQUVBLElBQUk7WUFDSCwyQ0FBMkM7WUFDM0NYLE1BQU1TLE9BQU8sbUJBQW1CLEdBQUksb0JBQW9CLEdBQUlOO1FBQzdELEVBQUUsT0FBT1MsR0FBRztZQUNYLE9BQU9BLE1BQU1YO1FBQ2Q7SUFDRDtBQUNELE9BQU87SUFDTixtTEFBbUwsR0FDbkwsSUFBSVksWUFBWW5CLFVBQVU7SUFDMUIscUNBQXFDLEdBQ3JDLElBQUlvQixhQUFhO0lBRWpCLHdCQUF3QixHQUN4QmYsS0FBSyxTQUFTUyxRQUFRQyxLQUFLO1FBQzFCLGlFQUFpRTtRQUNqRSxJQUFJLENBQUNBLFNBQVUsT0FBT0EsVUFBVSxZQUFZLE9BQU9BLFVBQVUsWUFBYTtZQUN6RSxPQUFPO1FBQ1I7UUFFQSxPQUFPSSxVQUFVSixXQUFXSztJQUM3QjtBQUNEO0FBRUFDLE9BQU9DLE9BQU8sR0FBR2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHVsbHJlcXVlc3Rib3QvLi9ub2RlX21vZHVsZXMvaXMtcmVnZXgvaW5kZXguanM/NDljOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCdjYWxsLWJvdW5kJyk7XG52YXIgaGFzVG9TdHJpbmdUYWcgPSByZXF1aXJlKCdoYXMtdG9zdHJpbmd0YWcvc2hhbXMnKSgpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJ2hhc293bicpO1xudmFyIGdPUEQgPSByZXF1aXJlKCdnb3BkJyk7XG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuJyl9ICovXG52YXIgZm47XG5cbmlmIChoYXNUb1N0cmluZ1RhZykge1xuXHQvKiogQHR5cGUgeyhyZWNlaXZlcjogVGhpc1BhcmFtZXRlclR5cGU8dHlwZW9mIFJlZ0V4cC5wcm90b3R5cGUuZXhlYz4sIC4uLmFyZ3M6IFBhcmFtZXRlcnM8dHlwZW9mIFJlZ0V4cC5wcm90b3R5cGUuZXhlYz4pID0+IFJldHVyblR5cGU8dHlwZW9mIFJlZ0V4cC5wcm90b3R5cGUuZXhlYz59ICovXG5cdHZhciAkZXhlYyA9IGNhbGxCb3VuZCgnUmVnRXhwLnByb3RvdHlwZS5leGVjJyk7XG5cdC8qKiBAdHlwZSB7b2JqZWN0fSAqL1xuXHR2YXIgaXNSZWdleE1hcmtlciA9IHt9O1xuXG5cdHZhciB0aHJvd1JlZ2V4TWFya2VyID0gZnVuY3Rpb24gKCkge1xuXHRcdHRocm93IGlzUmVnZXhNYXJrZXI7XG5cdH07XG5cdC8qKiBAdHlwZSB7eyB0b1N0cmluZygpOiBuZXZlciwgdmFsdWVPZigpOiBuZXZlciwgW1N5bWJvbC50b1ByaW1pdGl2ZV0/KCk6IG5ldmVyIH19ICovXG5cdHZhciBiYWRTdHJpbmdpZmllciA9IHtcblx0XHR0b1N0cmluZzogdGhyb3dSZWdleE1hcmtlcixcblx0XHR2YWx1ZU9mOiB0aHJvd1JlZ2V4TWFya2VyXG5cdH07XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wudG9QcmltaXRpdmUgPT09ICdzeW1ib2wnKSB7XG5cdFx0YmFkU3RyaW5naWZpZXJbU3ltYm9sLnRvUHJpbWl0aXZlXSA9IHRocm93UmVnZXhNYXJrZXI7XG5cdH1cblxuXHQvKiogQHR5cGUge2ltcG9ydCgnLicpfSAqL1xuXHQvLyBAdHMtZXhwZWN0LWVycm9yIFRTIGNhbid0IGZpZ3VyZSBvdXQgdGhhdCB0aGUgJGV4ZWMgY2FsbCBhbHdheXMgdGhyb3dzXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuXHRmbiA9IGZ1bmN0aW9uIGlzUmVnZXgodmFsdWUpIHtcblx0XHRpZiAoIXZhbHVlIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZXh0cmEtcGFyZW5zXG5cdFx0dmFyIGRlc2NyaXB0b3IgPSAvKiogQHR5cGUge05vbk51bGxhYmxlPHR5cGVvZiBnT1BEPn0gKi8gKGdPUEQpKC8qKiBAdHlwZSB7eyBsYXN0SW5kZXg/OiB1bmtub3duIH19ICovICh2YWx1ZSksICdsYXN0SW5kZXgnKTtcblx0XHR2YXIgaGFzTGFzdEluZGV4RGF0YVByb3BlcnR5ID0gZGVzY3JpcHRvciAmJiBoYXNPd24oZGVzY3JpcHRvciwgJ3ZhbHVlJyk7XG5cdFx0aWYgKCFoYXNMYXN0SW5kZXhEYXRhUHJvcGVydHkpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHR0cnkge1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV4dHJhLXBhcmVuc1xuXHRcdFx0JGV4ZWModmFsdWUsIC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAoLyoqIEB0eXBlIHt1bmtub3dufSAqLyAoYmFkU3RyaW5naWZpZXIpKSk7XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0cmV0dXJuIGUgPT09IGlzUmVnZXhNYXJrZXI7XG5cdFx0fVxuXHR9O1xufSBlbHNlIHtcblx0LyoqIEB0eXBlIHsocmVjZWl2ZXI6IFRoaXNQYXJhbWV0ZXJUeXBlPHR5cGVvZiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nPiwgLi4uYXJnczogUGFyYW1ldGVyczx0eXBlb2YgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZz4pID0+IFJldHVyblR5cGU8dHlwZW9mIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc+fSAqL1xuXHR2YXIgJHRvU3RyaW5nID0gY2FsbEJvdW5kKCdPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nJyk7XG5cdC8qKiBAY29uc3QgQHR5cGUgeydbb2JqZWN0IFJlZ0V4cF0nfSAqL1xuXHR2YXIgcmVnZXhDbGFzcyA9ICdbb2JqZWN0IFJlZ0V4cF0nO1xuXG5cdC8qKiBAdHlwZSB7aW1wb3J0KCcuJyl9ICovXG5cdGZuID0gZnVuY3Rpb24gaXNSZWdleCh2YWx1ZSkge1xuXHRcdC8vIEluIG9sZGVyIGJyb3dzZXJzLCB0eXBlb2YgcmVnZXggaW5jb3JyZWN0bHkgcmV0dXJucyAnZnVuY3Rpb24nXG5cdFx0aWYgKCF2YWx1ZSB8fCAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsdWUgIT09ICdmdW5jdGlvbicpKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuICR0b1N0cmluZyh2YWx1ZSkgPT09IHJlZ2V4Q2xhc3M7XG5cdH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm47XG4iXSwibmFtZXMiOlsiY2FsbEJvdW5kIiwicmVxdWlyZSIsImhhc1RvU3RyaW5nVGFnIiwiaGFzT3duIiwiZ09QRCIsImZuIiwiJGV4ZWMiLCJpc1JlZ2V4TWFya2VyIiwidGhyb3dSZWdleE1hcmtlciIsImJhZFN0cmluZ2lmaWVyIiwidG9TdHJpbmciLCJ2YWx1ZU9mIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJpc1JlZ2V4IiwidmFsdWUiLCJkZXNjcmlwdG9yIiwiaGFzTGFzdEluZGV4RGF0YVByb3BlcnR5IiwiZSIsIiR0b1N0cmluZyIsInJlZ2V4Q2xhc3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/is-regex/index.js\n");

/***/ })

};
;